<!-- ##### SECTION Title ##### -->
MidgardBlob

<!-- ##### SECTION Short_Description ##### -->
Files and binary data.

<!-- ##### SECTION Long_Description ##### -->
<para>
 #MidgardBlob class provides transparent access to real files located in filesystem. 
 It's a proxy between database objects (usually midgard_attachment) and real files 
 like images or documents.
</para>
 
<para>
 Main #MidgardBlob approaches:
 <itemizedlist>
 <listitem><para>
 Binary data doesn't have to be stored together with database record ( #MidgardObject ).
 </para></listitem>
  <listitem><para>
 One object may have unlimited attachments.
 </para></listitem>
 <listitem><para>
 One blob may be shared among different objects ( of different classes even ).
 </para></listitem>
 <listitem><para>
 You may attach attachment to another attachment ( notes to documentation or image thumbnails ).
 </para></listitem>
 <listitem><para>
 Binary file is independent from objects 
 </para></listitem>
 </itemizedlist> 
</para>

<!-- ##### SECTION See_Also ##### -->
<para>

</para>

<!-- ##### SECTION Stability_Level ##### -->


<!-- ##### SECTION Image ##### -->


<!-- ##### STRUCT MidgardBlob ##### -->
<para>

</para>


<!-- ##### ARG MidgardBlob:attachment ##### -->
<para>

</para>

<!-- ##### ARG MidgardBlob:content ##### -->
<para>

</para>

<!-- ##### ARG MidgardBlob:encoding ##### -->
<para>

</para>

<!-- ##### ARG MidgardBlob:parentguid ##### -->
<para>

</para>

<!-- ##### STRUCT MidgardBlobClass ##### -->
<para>

</para>

@parent: 
@read_content: 
@write_content: 
@remove_file: 
@exists: 
@get_path: 
@get_handler: 

<!-- ##### FUNCTION midgard_blob_new ##### -->
<para>

</para>

@attachment: 
@encoding: 
@Returns: 


<!-- ##### FUNCTION midgard_blob_create_blob ##### -->
<para>

</para>

@attachment: 
@encoding: 
@Returns: 


<!-- ##### FUNCTION midgard_blob_read_content ##### -->
<para>

</para>

@self: 
@bytes_read: 
@Returns: 


<!-- ##### FUNCTION midgard_blob_write_content ##### -->
<para>

</para>

@self: 
@content: 
@Returns: 


<!-- ##### FUNCTION midgard_blob_get_handler ##### -->
<para>

</para>

@self: 
@mode: 
@error: 
@Returns: 


<!-- ##### FUNCTION midgard_blob_get_path ##### -->
<para>

</para>

@self: 
@Returns: 


<!-- ##### FUNCTION midgard_blob_exists ##### -->
<para>

</para>

@self: 
@Returns: 


<!-- ##### FUNCTION midgard_blob_remove_file ##### -->
<para>

</para>

@self: 
@error: 
@Returns: 


